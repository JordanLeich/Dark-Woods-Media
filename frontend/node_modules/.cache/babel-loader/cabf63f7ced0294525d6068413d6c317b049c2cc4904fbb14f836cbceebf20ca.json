{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cprin\\\\Documents\\\\GitHub\\\\Dark-Woods-Media\\\\frontend\\\\src\\\\pages\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Movies.css'; // Optional: Create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    // Fetch movies from the backend\n    axios.get('/api/movies').then(response => setMovies(response.data)).catch(error => console.error('Error fetching movies:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.imageUrl,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", movie.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condition: \", movie.condition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie._id}`,\n          className: \"btn\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, movie._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Movies","_s","movies","setMovies","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","imageUrl","alt","title","price","condition","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/cprin/Documents/GitHub/Dark-Woods-Media/frontend/src/pages/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './Movies.css'; // Optional: Create this file for styling\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch movies from the backend\r\n    axios.get('/api/movies')\r\n      .then(response => setMovies(response.data))\r\n      .catch(error => console.error('Error fetching movies:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"movies\">\r\n      <h1>Available Movies</h1>\r\n      <div className=\"movie-list\">\r\n        {movies.map(movie => (\r\n          <div key={movie._id} className=\"movie-card\">\r\n            <img src={movie.imageUrl} alt={movie.title} />\r\n            <h2>{movie.title}</h2>\r\n            <p>Price: ${movie.price}</p>\r\n            <p>Condition: {movie.condition}</p>\r\n            <Link to={`/movies/${movie._id}`} className=\"btn\">View Details</Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACQ,GAAG,CAAC,aAAa,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAIH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKY,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBV,MAAM,CAACe,GAAG,CAACC,KAAK,iBACfnB,OAAA;QAAqBY,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzCb,OAAA;UAAKoB,GAAG,EAAED,KAAK,CAACE,QAAS;UAACC,GAAG,EAAEH,KAAK,CAACI;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9CjB,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBjB,OAAA;UAAAa,QAAA,GAAG,UAAQ,EAACM,KAAK,CAACK,KAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BjB,OAAA;UAAAa,QAAA,GAAG,aAAW,EAACM,KAAK,CAACM,SAAS;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCjB,OAAA,CAACF,IAAI;UAAC4B,EAAE,EAAE,WAAWP,KAAK,CAACQ,GAAG,EAAG;UAACf,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAL7DE,KAAK,CAACQ,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA1BID,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA4BZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}